options:
	skill_list: "magic","furnace","botany","axes","swords","arch","jumping","agility","defense","farm","mine","woodcut"



function get_dir(p: player) :: text:
	if {_p}'s facing is north:
		return "N"
	if {_p}'s facing is east:
		return "E"
	if {_p}'s facing is west:
		return "W"
	if {_p}'s facing is south:
		return "S"
	return "?"

on join:
	while player is online:
		wait 5 ticks
		if player's tool is a stick named "&dTearic Staff":
			send action bar "%bar(player)%" to player
		if player's tool is a stick named "&aDrusha Staff":
			send action bar "%bar(player)%" to player
		if player's tool is any weapon or any axe:
			send action bar "%bar(player)%" to player

function bar(p: player) :: text:
	if {active.%{_p}%} is not set:
		if {amountreduced.%{_p}%} or {staminareducecooldown.%{_p}%} is set:
			set {universalaction.%{_p}%} to "&a❇ %{stamina.%{_p}%}%/%{staminamax.%{_p}%}% &7(%{amountreduced.%{_p}%}%&7) &7%get_temp({_p})%°&eF &f%get_dir({_p})% &b✧ %{mana.%{_p}%}%/%{maxmana.%{_p}%}%"
			return {universalaction.%{_p}%}
		if {manadeplete.%{_p}%} or {manareducecooldown.%{_p}%} is set:
			set {universalaction.%{_p}%} to "&a❇ %{stamina.%{_p}%}%/%{staminamax.%{_p}%}% &7%get_temp({_p})%°&eF &f%get_dir({_p})% &b✧ %{mana.%{_p}%}%/%{maxmana.%{_p}%}% &7(%{manadeplete.%{_p}%}%&7)"
			return {universalaction.%{_p}%}
		set {universalaction.%{_p}%} to "&a❇ %{stamina.%{_p}%}%/%{staminamax.%{_p}%}% &7%get_temp({_p})%°&eF &f%get_dir({_p})% &b✧ %{mana.%{_p}%}%/%{maxmana.%{_p}%}%" 
		return {universalaction.%{_p}%}
	set {universalaction.%{_p}%} to "&a❇ %{stamina.%{_p}%}%/%{staminamax.%{_p}%}% &7%get_temp({_p})%°&eF &f%get_dir({_p})% %{choice::%{_p}%::*}% &b✧ %{mana.%{_p}%}%/%{maxmana.%{_p}%}%"
	return {universalaction.%{_p}%}
	

on chat:
	if {cow.%player%} is true:
		set {t1.%player%} to message
		if {t1.%player%} is "1":
			set {warped.%player%} to true
			set {crimson.%player%} to false
			send "&3Your eyes cry Warped Tears!" to player
			play sound "ambient.warped_forest.mood" with volume 1 at player for player
			set {cow.%player%} to false
			cancel event
			stop
		if {t1.%player%} is "2":
			set {crimson.%player%} to true
			set {warped.%player%} to false
			send "&cYour eyes cry Crimson Tears!" to player
			play sound "ambient.crimson_forest.mood" with volume 1 at player for player
			set {cow.%player%} to false
			cancel event
			stop
			
command /xp:
	trigger:
		loop {@skill_list}:
			if {%loop-value%.%player%} is not set:
				set {%loop-value%.%player%} to 0
		add "&aMain Skills > " to {_ya::*}
		add "" to {_ya::*}
		add "&e  - Tearic: &7%{magic.%player%}%" to {_ya::*}
		add "&e  - Botany: &7%{botany.%player%}%" to {_ya::*}
		add "&e  - Blacksmithing: &7%{furnace.%player%}%" to {_ya::*}
		add "" to {_ya::*}
		add "&aWeapon Skills > " to {_ya::*}
		add "" to {_ya::*}
		add "&e  - Axes: &7%{axes.%player%}%" to {_ya::*}
		add "&e  - Swords: &7%{swords.%player%}%" to {_ya::*}
		add "&e  - Archery: &7%{arch.%player%}%" to {_ya::*}
		add "" to {_ya::*}
		add "&aSide Skills > " to {_ya::*}
		add "" to {_ya::*}
		add "&e  - Jumping: &7%{jumping.%player%}%" to {_ya::*}
		add "&e  - Agility: &7%{agility.%player%}%" to {_ya::*}
		add "&e  - Defense: &7%{defense.%player%}%" to {_ya::*}
		add "&e  - Farming: &7%{farm.%player%}%" to {_ya::*}
		add "&e  - Mining: &7%{mine.%player%}%" to {_ya::*}
		add "&e  - Woodcutting: &7%{woodcut.%player%}%" to {_ya::*}
		send "" to player
		send "&7--------&6Stats&7---------"
		send "" to player
		send {_ya::*} to player
		set {_a} to {defense.%{_p}%}+{agility.%{_p}%}+{arch.%{_p}%}+{woodcut.%{_p}%}+{swords.%{_p}%}+{furnace.%{_p}%}+{mine.%{_p}%}+{jumping.%{_p}%}+{axes.%{_p}%}+{botany.%{_p}%}+{farm.%{_p}%}+{magic.%{_p}%}
		set {averagelevel.%{_p}%} to {_a}/11
		send "" to player
		send "&6Average Level >> &7&l%{averagelevel.%player%}%" to player
		send "" to player
		send "&7-------------------------" to player
		send "" to player
		if {magic.%player%} is 12:
			if {warped.%player%} is false:
				if {crimson.%player%} is false:
					send "" to player
					send "" to player
					send "&cCrimson: &7Destruction and cool mage shit." to player
					send "&3Warped: &7Utility and general spells." to player
					send "&3Warped: 1 &7| &cCrimson: 2" to player
					send "" to player
					send "" to player
					set {cow.%player%} to true
					stop
		
		
		
function xp_req(p: player, s: text) :: number:
	if {staminamax.%{_p}%} is not set:
		set {staminamax.%{_p}%} to 100
	if {_s} is "axes" or "arch" or "swords" or "defense":
		set {_xp} to {%{_s}%.%{_p}%} * 25
		return {_xp}
	if {_s} is "mine" or "woodcut":
		set {_xp} to {%{_s}%.%{_p}%} * 20
		return {_xp}
	if {_s} is "agility":
		set {_xp} to {%{_s}%.%{_p}%} * 1460
		return {_xp}
	if {_s} is "furnace":
		set {_xp} to {%{_s}%.%{_p}%} * 50
		return {_xp}
	if {_s} is "botany":
		set {_xp} to {%{_s}%.%{_p}%} * 115
		return {_xp}
	if {_s} is "jumping":
		set {_xp} to {%{_s}%.%{_p}%} * 160
		return {_xp}
	if {_s} is "farm":
		set {_xp} to {%{_s}%.%{_p}%} * 108
		return {_xp}
	if {_s} is "magic":
		set {_xp} to {%{_s}%.%{_p}%} * 40
		return {_xp}
	
function levelup(p: player, s: text):
	set {_xp} to xp_req({_p},{_s})
	if check_main({_p}) is not "yes":
		if {_s} is "botanist":
			if check_main({_p}) is not "botanist":
				stop
		if {_s} is "furnace":
			if check_main({_p}) is not "furnace":
				stop
		if {_s} is "magic":
			if check_main({_p}) is not "magic":
				stop
	if {xp%{_s}%.%{_p}%} > {_xp}:
		add 1 to {%{_s}%.%{_p}%}
		if {_s} is "agility":
			set {staminamax.%{_p}%} to ({%{_s}%.%{_p}%} * 10) + 90
		set {xp%{_s}%.%{_p}%} to 0
		send title "&a&lLevel up!" to {_p}
		send subtitle "&7Your &d&l%{_s}% &7skill is now level &e%{%{_s}%.%{_p}%}%&7!" to {_p}
		play sound "entity.player.levelup" with volume 1 at location of {_p} for all players
	wait 0.2 seconds
	if {_s} is "magic":
		if {magic.%{_p}%} > 11:
			if {warped.%{_p}%} is false:
				if {crimson.%{_p}%} is false:
					send "&cCrimson: &7Destruction and cool mage shit." to {_p}
					send "&3Warped: &7Utility and general spells." to {_p}
					send "&3Warped: 1 &7| &cCrimson: 2" to {_p}
					set {cow.%{_p}%} to true
	set {_a} to {agility.%{_p}%}+{arch.%{_p}%}+{woodcut.%{_p}%}+{swords.%{_p}%}+{furnace.%{_p}%}+{mine.%{_p}%}+{jumping.%{_p}%}+{axes.%{_p}%}+{botany.%{_p}%}+{farm.%{_p}%}+{magic.%{_p}%}
	set {averagelevel.%{_p}%} to {_a}/11
	if {furnace.%{_p}%} >= 12:
		title_reward({_p},"Le Smelt")
	if {furnace.%{_p}%} >= 25:
		title_reward({_p},"Furnace Lover")
	if {furnace.%{_p}%} >= 35:
		title_reward({_p},"Riverwood's Blacksmith")	
	if {furnace.%{_p}%} >= 50:
		title_reward({_p},"bro why")	
	if {swords.%{_p}%} >= 20:
		title_reward({_p},"Minikui ッッ")
	if {swords.%{_p}%} >= 30:
		title_reward({_p},"wanna join my clan?")
	if {farm.%{_p}%} >= 12:
		title_reward({_p},"Walter White")
	if {farm.%{_p}%} >= 25:
		title_reward({_p},"Jesse Pinkman")
	if {farm.%{_p}%} >= 30:
		title_reward({_p},"Gustavo Fring")	
	if {botany.%{_p}%} >= 30:
		title_reward({_p},"Shaman King")
	if {axes.%{_p}%} >= 20:
		title_reward({_p},"Thorkell")
	if {mine.%{_p}%} >= 5:
		title_reward({_p},"Underage")
	if {mine.%{_p}%} >= 14:
		title_reward({_p},"Teenager")
	if {mine.%{_p}%} >= 18:
		title_reward({_p},"Big Boy")
	if {mine.%{_p}%} >= 30:
		title_reward({_p},"Black Lung")	
	if {arch.%{_p}%} >= 12:
		title_reward({_p},"quiet kid")
	if {farm.%{_p}%} >= 20:
		if {botany.%{_p}%} >= 20:
			title_reward({_p},"Green Thumb")
	if {botany.%{_p}%} >= 20:
		title_reward({_p},"Ghandi")	
	if {agility.%{_p}%} >= 25:
		if {jumping.%{_p}%} >= 25:
			title_reward({_p},"Pizza Guy")
	if {axes.%{_p}%} >= 10:
		if {woodcut.%{_p}%} >= 10:
			title_reward({_p},"strong and handsome")
	if {mine.%{_p}%} >= 50:
		title_reward({_p},"Echomaster")			
	if {swords.%{_p}%} >= 20:
		if {tearic.%{_p}%} >= 20:
			title_reward({_p},"...im cool right?")
	if {mine.%{_p}%} >= 20:
		if {tearic.%{_p}%} >= 20:
			title_reward({_p},"Simon")		


on damage:
	attacker is an entity
	victim is a player
	add damage to {xpdefense.%victim%}	
	levelup(victim,"defense")	
	show_xp(victim,"defense",{xpdefense.%victim%},"Defense")			

					
every 2 minutes:
	loop all players:
		loop all blocks in radius 8 of loop-player:
			if loop-block is anvil:
				add 5 to {xpfurnace.%loop-player%} 
				set {_xp} to xp_req(loop-player,"furnace")
				levelup(loop-player,"furnace")
				show_xp(loop-player,"furnace",{xpfurnace.%loop-player%},"Blacksmithing")
		
every 90 seconds:
	loop all players:
		loop all blocks in radius 8 of loop-player:
			if loop-block is bookshelf:
				add 1 to {_p.%loop-player%}
		if {_p.%loop-player%} is greater than 5:
			add 5 to {xpmagic.%loop-player%} 
			play sound "ambient.warped_forest.mood" with volume 1 at loop-player for loop-player
			set {_xp} to xp_req(loop-player,"magic")
			levelup(loop-player,"magic")
			show_xp(loop-player,"magic",{xpmagic.%loop-player%},"Tearic")
		else:
			loop all blocks in radius 8 of loop-player:
				if loop-block is bookshelf:
					set {_a.%loop-player%} to true
					stop loop
			if {_a.%loop-player%} is true:
				if {furnace.%loop-player%} is greater than 11:
					stop
				if {botany.%loop-player%} is greater than 11:
					stop
				add {_p.%loop-player%} to {xpmagic.%loop-player%} 
				set {_xp} to xp_req(loop-player,"magic")
				play sound "ambient.warped_forest.mood" with volume 1 at loop-player for loop-player
				levelup(loop-player,"magic")
				show_xp(loop-player,"magic",{xpmagic.%loop-player%},"Tearic")
				set {_a.%loop-player%} to false
						#ignite loop-player
			
every 90 seconds:
	loop all players:
		loop all blocks in radius 8 of loop-player:
			if loop-block is crying obsidian:
				add 1 to {_p.%loop-player%}
		if {_p.%loop-player%} is greater than 5:
			add 5 to {xpmagic.%loop-player%} 
			play sound "ambient.warped_forest.mood" with volume 1 at loop-player for loop-player
			set {_xp} to xp_req(loop-player,"magic")
			levelup(loop-player,"magic")
			#send action bar "&aTearic> &7%{xpmagic.%loop-player%}%/%{_xp}% xp" to loop-player
			show_xp(loop-player,"magic",{xpmagic.%loop-player%},"Tearic")
		else:
			loop all blocks in radius 8 of loop-player:
				if loop-block is crying obsidian:
					set {_a.%loop-player%} to true
					stop loop
			if {_a.%loop-player%} is true:
				add {_p.%loop-player%} to {xpmagic.%loop-player%} 
				set {_xp} to xp_req(loop-player,"magic")
				play sound "ambient.warped_forest.mood" with volume 1 at loop-player for loop-player
				levelup(loop-player,"magic")
				#send action bar "&aTearic> &7%{xpmagic.%loop-player%}%/%{_xp}% xp" to loop-player
				show_xp(loop-player,"magic",{xpmagic.%loop-player%},"Tearic")
				set {_a.%loop-player%} to false
					#ignite loop-player
	
	
command /piss <player>:
	trigger:
		if player is "Izlador":
			set {cow.%arg-1%} to false
			set {crimson.%arg-1%} to false
			set {warped.%arg-1%} to false

		
#every 10 seconds:
	#loop all players:
		#loop all blocks in radius 8 of loop-player:
			#if loop-block is bookshelf:
				#add 1 to {_p.%loop-player%}
			#if {_p.%loop-player%} is greater than 10:
				#send action bar "&cBrain blast! There's too many books here to gain Tearic xp!" to loop-player
				#stop
			#add 1 to {xpmagic.%loop-player%} 
			#set {_xp} to xp_req(loop-player,"magic")
			#levelup(loop-player,"magic")
			#send action bar "&aTearic> &7%{xpmagic.%loop-player%}%/%{_xp}% xp" to loop-player
			#if loop-block is crying obsidian:
				#add 1 to {xpmagic.%loop-player%} 
				#set {_xp} to xp_req(loop-player,"magic")
				#levelup(loop-player,"magic")
				#send action bar "&aTearic> &7%{xpmagic.%loop-player%}%/%{_xp}% xp" to loop-player
				
on death of enderman or blaze or shulker or magma cube:
	chance of 50%:
		drop glowing ghast tear named "&eTear Essence" with lore "&7It's shaking..." at event-location

on rightclick:
	if name of player's tool is "&eTear Essence":
		remove 1 of player's tool from player's inventory
		send action bar "&eWhat wonderful knowledge!" to player
		play sound "entity.player.levelup" with volume 1 at location of player for all players
		wait 1 seconds
		add 10 to {xpmagic.%player%} 
		set {_xp} to xp_req(player,"magic")
		levelup(player,"magic")
		show_xp(player,"magic",{xpmagic.%player%},"Tearic")
	if player's tool is a ender pearl:
		chance of 30%
		wait 0.9 seconds
		remove 1 of player's tool from player's inventory
		send action bar "&eYou gain knowledge of Tearic constructs!" to player
		play sound "entity.player.levelup" with volume 1 at location of player for all players
		wait 1 seconds
		add 2 to {xpmagic.%player%} 
		set {_xp} to xp_req(player,"magic")
		levelup(player,"magic")
		show_xp(player,"magic",{xpmagic.%player%},"Tearic")
	


on smelt:
	loop all players in radius 8 of event-block:
		loop all blocks in radius 8 of loop-player:
			if loop-block is furnace:
				add 1 to {_p.%loop-player%}
		if {_p.%loop-player%} is greater than 15:
			send action bar "&cThere's too many furnaces here to gain any xp for blacksmithing!" to loop-player
			stop
		else:
			loop all blocks in radius 8 of loop-player:
				if loop-block is furnace or smoker or blast furnace:
					set {_a.%loop-player%} to true
					stop loop
			if {_a.%loop-player%} is true:
				if ore slot of the block is kelp:
					if {furnace.%loop-player%} > 6:
						stop
				add 2 to {xpfurnace.%loop-player%} 
				set {_xp} to xp_req(loop-player,"furnace")
				levelup(loop-player,"furnace")
				show_xp(loop-player,"furnace",{xpfurnace.%loop-player%},"Blacksmithing")


on rightclick:
	if player is holding book:
		remove 1 of player's tool from player's inventory
		send action bar "&eWhat wonderful knowledge!" to player
		play sound "entity.player.levelup" with volume 1 at location of player for all players
		wait 1 seconds
		add 8 to {xpmagic.%player%} 
		set {_xp} to xp_req(player,"magic")
		levelup(player,"magic")
		show_xp(player,"magic",{xpmagic.%player%},"Tearic")
	if player is holding enchanted book:
		remove 1 of player's tool from player's inventory
		send action bar "&eWhat wonderful knowledge!" to player
		play sound "entity.player.levelup" with volume 1 at location of player for all players
		wait 1 seconds
		add 15 to {xpmagic.%player%} 
		set {_xp} to xp_req(player,"magic")
		levelup(player,"magic")
		show_xp(player,"magic",{xpmagic.%player%},"Tearic")


every 5 seconds:
	delete all bossbars

function show_xp(p: player, xp: text, type: object, display: text):
	set {_xpreq} to xp_req({_p},"%{_xp}%")
	set {_bar.%{_p}%} to bossbar named "%{_p}%%{_xp}%" with title "<##D1E8A1>%{_display}% &7%{_type}%/%{_xpreq}%"
	set boss bar color of {_bar.%{_p}%} to green
	set boss bar style of {_bar.%{_p}%} to segmented 6
	set bossbar progress of {_bar.%{_p}%} to ({_type}/{_xpreq})*100
	add {_p} to bossbar players of {_bar.%{_p}%}
	


#movement
on player move:
	if player is sprinting:
		if block below player is air:
			stop
		if block at player is minecraft:water:
			stop
		if vehicle of the player is a minecart or boat:
			stop
		add 1 to {xpagility.%player%} 
		set {_xp} to xp_req(player,"agility")
		levelup(player,"agility")
		if setting_enabled(player,"stat.agility.show"):
			show_xp(player,"agility",{xpagility.%player%},"Agility")
		
on jump:
	if block 2 blocks above player is air:
		set {_waited} to difference between {jamp.%player%} and now
		if {_waited} is less than 8 ticks:
			stop
		add 1 to {xpjumping.%player%} 
		set {_xp} to xp_req(player,"jumping")
		levelup(player,"jumping")
		if setting_enabled(player,"stat.jump.show"):
			show_xp(player,"jumping",{xpjumping.%player%},"Jumping")
		set {jamp.%player%} to now
	
#woodcutting and mining
on place of log or any stone or cobblestone or any ore or any stripped log:
    set {BlockByPlayer::%event-location%} to player
	
on break:
	if player's tool is a pickaxe:
		if {serverage} < 1:
			if event-block is iron ore:
				cancel event
				send action bar "&7Your feeble mind doesn't understand the use of this yet." to player
				stop
			if event-block is copper ore:
				cancel event
				send action bar "&7Your feeble mind doesn't understand the use of this yet." to player
				stop
		if event-block is any stone or cobblestone or any ore:
			if {BlockByPlayer::%event-location%} is not set:
				wait 1 tick
				add 1 to {xpmine.%player%} 
				set {_xp} to xp_req(player,"mine")
				levelup(player,"mine")
				if setting_enabled(player,"stat.mine.show"):
					show_xp(player,"mine",{xpmine.%player%},"Mining")
			else:
				reset {BlockByPlayer::%event-location%}
	if player's tool is a axe:
		if event-block is any log:
			if {BlockByPlayer::%event-location%} is not set:
				add 1 to {xpwoodcut.%player%} 
				set {_xp} to xp_req(player,"woodcut")
				levelup(player,"woodcut")
				if setting_enabled(player,"stat.woodcut.show"):
					show_xp(player,"woodcut",{xpwoodcut.%player%},"Woodcutting")
				stop
			else:
				reset {BlockByPlayer::%event-location%}


function check_main(p: player) :: text:
	return {main.%{_p}%}

	
			
on break of minecraft:grass:
	if player is holding shears:
		stop
	if {farm.%player%} < 10:
		add random integer between 1 and 3 to {xpfarm.%player%} 
		set {_xp} to xp_req(player,"farm")
		levelup(player,"farm")
		if setting_enabled(player,"stat.farm.show"):
			show_xp(player,"farm",{xpfarm.%player%},"Farming")
	if {botany.%player%} < 11:
		add random integer between 1 and 2 to {xpbotany.%player%} 
		set {_xp} to xp_req(player,"botany")
		levelup(player,"botany")
		if setting_enabled(player,"stat.botany.show"):
			show_xp(player,"botany",{xpbotany.%player%},"Botany")
	
on rightclick on farmland:
	if block above event-block is air:
		if player is holding seed:
			if {BlockByPlayer::%event-location%} is not set:
				if {farm.%player%} > 9:
					set {BlockByPlayer::%event-location%} to player
					add 2 to {xpfarm.%player%} 
					set {_xp} to xp_req(player,"farm")
					levelup(player,"farm")
					if setting_enabled(player,"stat.farm.show"):
						show_xp(player,"farm",{xpfarm.%player%},"Farming")
		if player is holding a pumpkin seed or melon seed:
			if {BlockByPlayer::%event-location%} is not set:
				if {farm.%player%} > 11:
					set {BlockByPlayer::%event-location%} to player
					add 2 to {xpfarm.%player%} 
					set {_xp} to xp_req(player,"farm")
					levelup(player,"farm")
					if setting_enabled(player,"stat.farm.show"):
						show_xp(player,"farm",{xpfarm.%player%},"Farming")
		if player is holding carrot:
			if {BlockByPlayer::%event-location%} is not set:
				if {farm.%player%} > 19:
					set {BlockByPlayer::%event-location%} to player
					add 2 to {xpfarm.%player%} 
					set {_xp} to xp_req(player,"farm")
					levelup(player,"farm")
					if setting_enabled(player,"stat.farm.show"):
						show_xp(player,"farm",{xpfarm.%player%},"Farming")
		if player is holding potato:
			if {BlockByPlayer::%event-location%} is not set:
				if {farm.%player%} > 29:
					set {BlockByPlayer::%event-location%} to player
					add 2 to {xpfarm.%player%} 
					set {_xp} to xp_req(player,"farm")
					levelup(player,"farm")
					if setting_enabled(player,"stat.farm.show"):
						show_xp(player,"farm",{xpfarm.%player%},"Farming")
on break of fully grown wheat plant:
	if {farm.%player%} > 9:
		clear {BlockByPlayer::%event-location%}
		add 4 to {xpfarm.%player%} 
		set {_xp} to xp_req(player,"farm")
		levelup(player,"farm")
		if setting_enabled(player,"stat.farm.show"):
			show_xp(player,"farm",{xpfarm.%player%},"Farming")
		ts_relate(player,"add",0.1)
on break of fully grown carrot plant:
	if {farm.%player%} > 19:
		clear {BlockByPlayer::%event-location%}
		add 4 to {xpfarm.%player%} 
		set {_xp} to xp_req(player,"farm")
		levelup(player,"farm")
		if setting_enabled(player,"stat.farm.show"):
			show_xp(player,"farm",{xpfarm.%player%},"Farming")
		ts_relate(player,"add",0.1)
on break of fully grown potato plant:
	if {farm.%player%} > 29:
		clear {BlockByPlayer::%event-location%}
		add 4 to {xpfarm.%player%} 
		set {_xp} to xp_req(player,"farm")
		levelup(player,"farm")
		if setting_enabled(player,"stat.farm.show"):
			show_xp(player,"farm",{xpfarm.%player%},"Farming")
		ts_relate(player,"add",0.1)

	
#Weapons
on damage:
	wait 5 ticks
	attacker is player
	if attacker's tool is a bow:
		add 1 to {xparch.%attacker%} 
		set {_xp} to xp_req(attacker,"arch")
		levelup(attacker,"arch")
		if setting_enabled(attacker,"stat.arch.show"):
			show_xp(attacker,"arch",{xparch.%attacker%},"Archery")
	if attacker's tool is a sword:
		add 1 to {xpswords.%attacker%} 
		set {_xp} to xp_req(attacker,"swords")
		levelup(attacker,"swords")
		if setting_enabled(attacker,"stat.swords.show"):
			show_xp(attacker,"swords",{xpswords.%attacker%},"Swords")
	if attacker's tool is a axe:
		add 1 to {xpaxes.%attacker%} 
		set {_xp} to xp_req(attacker,"axes")
		levelup(attacker,"axes")
		if setting_enabled(attacker,"stat.axes.show"):
			show_xp(attacker,"axes",{xpaxes.%attacker%},"Axes")
		
		